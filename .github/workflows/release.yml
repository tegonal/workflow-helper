name: Release

on:
  push:
    branches:
      - release/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - id: extract
        name: Extract branch info
        uses: actions/github-script@v6
        with:
          script: |
            const { GITHUB_REF } = process.env
            console.log("ref", GITHUB_REF)
            const matches = new RegExp("refs/heads/release/(latest/)?(v[0-9]+\.[0-9]+\.[0-9]+(?:-RC[0-9]+)?)", "g").exec(GITHUB_REF)
            console.log("matches", matches)
            if (matches == null || matches[2] === undefined) {
              core.error('looks like a wrong version was defined, did not match vx.y.z => ' + GITHUB_REF)
            }
            const version = matches[2]
            const mainTag = 'tegonal/workflow-helper:' + version
            const isLatest = matches[1] !== undefined
            
            core.setOutput('version', version)
            core.setOutput('mainTag', mainTag)
            core.setOutput('isLatest', isLatest)
            core.setOutput('dockerTags', mainTag + (isLatest ? ',tegonal/workflow-helper:latest' : '') )
            
            const nextVersion = new RegExp("v([0-9]+)\.([0-9]+)").exec(version)
            core.setOutput('nextVersion', 'v' + nextVersion[1] + '.' + (nextVersion[2] + 1) + '.0-SNAPSHOT')

      - uses: actions/checkout@v2
      - name: "Set up JDK 11"
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 11

      - name: configure git
        run: |
          CONFIG=$(cat << EOM
          [user]
              name="${GITHUB_ACTOR}"
              email="${GITHUB_ACTOR}@users.noreply.github.com"
          EOM
          )
          echo "$CONFIG" >> .git/config

      - name: Update Latest version
        if: steps.extract.outputs.isLatest
        run: |
          ./scripts/update-latest-version.sh "${{ steps.extract.outputs.version }}"

      - name: Prepare Release
        run: |
          ./scripts/prepare-release.sh "${{ steps.extract.outputs.version }}"

      - name: Build assembly
        run: sbt assembly

      - name: check for TODOs
        run: ./scripts/todo-checker.sh -d "${GITHUB_WORKSPACE}" -i "${{ steps.extract.outputs.version }}"

      - name: push prepared changes
        run: git push

      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v3
        with:
          context: .
          load: true
          tags: ${{ steps.extract.outputs.mainTag }}

      - name: Run docker
        run: docker run --rm ${{ steps.extract.outputs.mainTag }} todo-checker --help"


      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.extract.outputs.dockerTags }}

      - name: git tag
        run: |
          git tag "${{ steps.extract.outputs.version }}"
          git push origin "${{ steps.extract.outputs.version }}"

      - name: prepare next dev
        run: | 
          ./scripts/prepare-next-dev-cycle.sh "${{ steps.extract.outputs.nextVersion }}"
          git push

      - name: Merge back to main
        if: steps.extract.outputs.isLatest
        run: |
          echo "ref: ${GITHUB_REF}"
          curl \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/tegonal/workflow-helper/pulls \
            -d '{"title":"Merge ${{ steps.extract.outputs.version }} back to main","head":"${GITHUB_REF}","base":"main"}'